name: Android Flutter Build and Deploy

on:
  push:
    branches:
      - main  # Trigger on push to main branch, change if needed

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'any'

      - name: Install dependencies
        run: flutter pub get

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-cache-
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'any'

      - name: Restore Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.yaml') }}

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
  upload:
    runs-on: ubuntu-latest
    needs: build  # Ensure 'build' job completes first
    steps:
      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/

      - name: Remove Existing Artifacts
        run: rm -rf build/app/outputs/flutter-apk/*

      - name: Upload APK to GitHub Repository
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
